/*
 * generated by Xtext 2.31.0
 */
grammar InternalFactory;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package es.unican.ildm.practica3.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package es.unican.ildm.practica3.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import es.unican.ildm.practica3.xtext.services.FactoryGrammarAccess;

}

@parser::members {

 	private FactoryGrammarAccess grammarAccess;

    public InternalFactoryParser(TokenStream input, FactoryGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Factory";
   	}

   	@Override
   	protected FactoryGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleFactory
entryRuleFactory returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFactoryRule()); }
	iv_ruleFactory=ruleFactory
	{ $current=$iv_ruleFactory.current; }
	EOF;

// Rule Factory
ruleFactory returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFactoryAccess().getFactoryAction_0(),
					$current);
			}
		)
		otherlv_1='Factory'
		{
			newLeafNode(otherlv_1, grammarAccess.getFactoryAccess().getFactoryKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getFactoryAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='elements'
			{
				newLeafNode(otherlv_3, grammarAccess.getFactoryAccess().getElementsKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getFactoryAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFactoryAccess().getElementsElementParserRuleCall_3_2_0());
					}
					lv_elements_5_0=ruleElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFactoryRule());
						}
						add(
							$current,
							"elements",
							lv_elements_5_0,
							"es.unican.ildm.practica3.xtext.Factory.Element");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getFactoryAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFactoryAccess().getElementsElementParserRuleCall_3_3_1_0());
						}
						lv_elements_7_0=ruleElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFactoryRule());
							}
							add(
								$current,
								"elements",
								lv_elements_7_0,
								"es.unican.ildm.practica3.xtext.Factory.Element");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getFactoryAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		(
			otherlv_9='connections'
			{
				newLeafNode(otherlv_9, grammarAccess.getFactoryAccess().getConnectionsKeyword_4_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getFactoryAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFactoryAccess().getConnectionsConnectionParserRuleCall_4_2_0());
					}
					lv_connections_11_0=ruleConnection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFactoryRule());
						}
						add(
							$current,
							"connections",
							lv_connections_11_0,
							"es.unican.ildm.practica3.xtext.Factory.Connection");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getFactoryAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFactoryAccess().getConnectionsConnectionParserRuleCall_4_3_1_0());
						}
						lv_connections_13_0=ruleConnection
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFactoryRule());
							}
							add(
								$current,
								"connections",
								lv_connections_13_0,
								"es.unican.ildm.practica3.xtext.Factory.Connection");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getFactoryAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getFactoryAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementAccess().getAssemblerParserRuleCall_0());
		}
		this_Assembler_0=ruleAssembler
		{
			$current = $this_Assembler_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getWrapperParserRuleCall_1());
		}
		this_Wrapper_1=ruleWrapper
		{
			$current = $this_Wrapper_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getStickProducerParserRuleCall_2());
		}
		this_StickProducer_2=ruleStickProducer
		{
			$current = $this_StickProducer_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getCandyProducerParserRuleCall_3());
		}
		this_CandyProducer_3=ruleCandyProducer
		{
			$current = $this_CandyProducer_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getConveyorBeltParserRuleCall_4());
		}
		this_ConveyorBelt_4=ruleConveyorBelt
		{
			$current = $this_ConveyorBelt_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getFlattenerParserRuleCall_5());
		}
		this_Flattener_5=ruleFlattener
		{
			$current = $this_Flattener_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	iv_ruleComponent=ruleComponent
	{ $current=$iv_ruleComponent.current; }
	EOF;

// Rule Component
ruleComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComponentAccess().getCandyFlatParserRuleCall_0());
		}
		this_CandyFlat_0=ruleCandyFlat
		{
			$current = $this_CandyFlat_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComponentAccess().getStickParserRuleCall_1());
		}
		this_Stick_1=ruleStick
		{
			$current = $this_Stick_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComponentAccess().getCandyBallParserRuleCall_2());
		}
		this_CandyBall_2=ruleCandyBall
		{
			$current = $this_CandyBall_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComponentAccess().getLollipopParserRuleCall_3());
		}
		this_Lollipop_3=ruleLollipop
		{
			$current = $this_Lollipop_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConnection
entryRuleConnection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectionRule()); }
	iv_ruleConnection=ruleConnection
	{ $current=$iv_ruleConnection.current; }
	EOF;

// Rule Connection
ruleConnection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConnectionAccess().getConnectionAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConnectionRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getConnectionAccess().getSourceElementCrossReference_1_0());
				}
			)
		)
		otherlv_2='->'
		{
			newLeafNode(otherlv_2, grammarAccess.getConnectionAccess().getHyphenMinusGreaterThanSignKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConnectionRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getConnectionAccess().getTargetElementCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleAssembler
entryRuleAssembler returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssemblerRule()); }
	iv_ruleAssembler=ruleAssembler
	{ $current=$iv_ruleAssembler.current; }
	EOF;

// Rule Assembler
ruleAssembler returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Assembler'
		{
			newLeafNode(otherlv_0, grammarAccess.getAssemblerAccess().getAssemblerKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssemblerAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssemblerRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"es.unican.ildm.practica3.xtext.Factory.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAssemblerAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='processingTime'
		{
			newLeafNode(otherlv_3, grammarAccess.getAssemblerAccess().getProcessingTimeKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssemblerAccess().getProcessingTimeEIntParserRuleCall_4_0());
				}
				lv_processingTime_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssemblerRule());
					}
					set(
						$current,
						"processingTime",
						lv_processingTime_4_0,
						"es.unican.ildm.practica3.xtext.Factory.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getAssemblerAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleWrapper
entryRuleWrapper returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWrapperRule()); }
	iv_ruleWrapper=ruleWrapper
	{ $current=$iv_ruleWrapper.current; }
	EOF;

// Rule Wrapper
ruleWrapper returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Wrapper'
		{
			newLeafNode(otherlv_0, grammarAccess.getWrapperAccess().getWrapperKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWrapperAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWrapperRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"es.unican.ildm.practica3.xtext.Factory.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getWrapperAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='processingTime'
		{
			newLeafNode(otherlv_3, grammarAccess.getWrapperAccess().getProcessingTimeKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWrapperAccess().getProcessingTimeEIntParserRuleCall_4_0());
				}
				lv_processingTime_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWrapperRule());
					}
					set(
						$current,
						"processingTime",
						lv_processingTime_4_0,
						"es.unican.ildm.practica3.xtext.Factory.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getWrapperAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleStickProducer
entryRuleStickProducer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStickProducerRule()); }
	iv_ruleStickProducer=ruleStickProducer
	{ $current=$iv_ruleStickProducer.current; }
	EOF;

// Rule StickProducer
ruleStickProducer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='StickProducer'
		{
			newLeafNode(otherlv_0, grammarAccess.getStickProducerAccess().getStickProducerKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStickProducerAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStickProducerRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"es.unican.ildm.practica3.xtext.Factory.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getStickProducerAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='processingTime'
		{
			newLeafNode(otherlv_3, grammarAccess.getStickProducerAccess().getProcessingTimeKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStickProducerAccess().getProcessingTimeEIntParserRuleCall_4_0());
				}
				lv_processingTime_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStickProducerRule());
					}
					set(
						$current,
						"processingTime",
						lv_processingTime_4_0,
						"es.unican.ildm.practica3.xtext.Factory.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='counter'
		{
			newLeafNode(otherlv_5, grammarAccess.getStickProducerAccess().getCounterKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStickProducerAccess().getCounterEIntParserRuleCall_6_0());
				}
				lv_counter_6_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStickProducerRule());
					}
					set(
						$current,
						"counter",
						lv_counter_6_0,
						"es.unican.ildm.practica3.xtext.Factory.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getStickProducerAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleCandyProducer
entryRuleCandyProducer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCandyProducerRule()); }
	iv_ruleCandyProducer=ruleCandyProducer
	{ $current=$iv_ruleCandyProducer.current; }
	EOF;

// Rule CandyProducer
ruleCandyProducer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CandyProducer'
		{
			newLeafNode(otherlv_0, grammarAccess.getCandyProducerAccess().getCandyProducerKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCandyProducerAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCandyProducerRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"es.unican.ildm.practica3.xtext.Factory.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCandyProducerAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='processingTime'
		{
			newLeafNode(otherlv_3, grammarAccess.getCandyProducerAccess().getProcessingTimeKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCandyProducerAccess().getProcessingTimeEIntParserRuleCall_4_0());
				}
				lv_processingTime_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCandyProducerRule());
					}
					set(
						$current,
						"processingTime",
						lv_processingTime_4_0,
						"es.unican.ildm.practica3.xtext.Factory.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='counter'
		{
			newLeafNode(otherlv_5, grammarAccess.getCandyProducerAccess().getCounterKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCandyProducerAccess().getCounterEIntParserRuleCall_6_0());
				}
				lv_counter_6_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCandyProducerRule());
					}
					set(
						$current,
						"counter",
						lv_counter_6_0,
						"es.unican.ildm.practica3.xtext.Factory.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getCandyProducerAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleConveyorBelt
entryRuleConveyorBelt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConveyorBeltRule()); }
	iv_ruleConveyorBelt=ruleConveyorBelt
	{ $current=$iv_ruleConveyorBelt.current; }
	EOF;

// Rule ConveyorBelt
ruleConveyorBelt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ConveyorBelt'
		{
			newLeafNode(otherlv_0, grammarAccess.getConveyorBeltAccess().getConveyorBeltKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConveyorBeltAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConveyorBeltRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"es.unican.ildm.practica3.xtext.Factory.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getConveyorBeltAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='capacity'
		{
			newLeafNode(otherlv_3, grammarAccess.getConveyorBeltAccess().getCapacityKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConveyorBeltAccess().getCapacityEIntParserRuleCall_4_0());
				}
				lv_capacity_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConveyorBeltRule());
					}
					set(
						$current,
						"capacity",
						lv_capacity_4_0,
						"es.unican.ildm.practica3.xtext.Factory.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='components'
			{
				newLeafNode(otherlv_5, grammarAccess.getConveyorBeltAccess().getComponentsKeyword_5_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getConveyorBeltAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConveyorBeltAccess().getComponentsComponentParserRuleCall_5_2_0());
					}
					lv_components_7_0=ruleComponent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConveyorBeltRule());
						}
						add(
							$current,
							"components",
							lv_components_7_0,
							"es.unican.ildm.practica3.xtext.Factory.Component");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getConveyorBeltAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConveyorBeltAccess().getComponentsComponentParserRuleCall_5_3_1_0());
						}
						lv_components_9_0=ruleComponent
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConveyorBeltRule());
							}
							add(
								$current,
								"components",
								lv_components_9_0,
								"es.unican.ildm.practica3.xtext.Factory.Component");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getConveyorBeltAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getConveyorBeltAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleFlattener
entryRuleFlattener returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFlattenerRule()); }
	iv_ruleFlattener=ruleFlattener
	{ $current=$iv_ruleFlattener.current; }
	EOF;

// Rule Flattener
ruleFlattener returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Flattener'
		{
			newLeafNode(otherlv_0, grammarAccess.getFlattenerAccess().getFlattenerKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFlattenerAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFlattenerRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"es.unican.ildm.practica3.xtext.Factory.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getFlattenerAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='processingTime'
		{
			newLeafNode(otherlv_3, grammarAccess.getFlattenerAccess().getProcessingTimeKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFlattenerAccess().getProcessingTimeEIntParserRuleCall_4_0());
				}
				lv_processingTime_4_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFlattenerRule());
					}
					set(
						$current,
						"processingTime",
						lv_processingTime_4_0,
						"es.unican.ildm.practica3.xtext.Factory.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getFlattenerAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleCandyFlat
entryRuleCandyFlat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCandyFlatRule()); }
	iv_ruleCandyFlat=ruleCandyFlat
	{ $current=$iv_ruleCandyFlat.current; }
	EOF;

// Rule CandyFlat
ruleCandyFlat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCandyFlatAccess().getCandyFlatAction_0(),
					$current);
			}
		)
		otherlv_1='CandyFlat'
		{
			newLeafNode(otherlv_1, grammarAccess.getCandyFlatAccess().getCandyFlatKeyword_1());
		}
	)
;

// Entry rule entryRuleStick
entryRuleStick returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStickRule()); }
	iv_ruleStick=ruleStick
	{ $current=$iv_ruleStick.current; }
	EOF;

// Rule Stick
ruleStick returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStickAccess().getStickAction_0(),
					$current);
			}
		)
		otherlv_1='Stick'
		{
			newLeafNode(otherlv_1, grammarAccess.getStickAccess().getStickKeyword_1());
		}
	)
;

// Entry rule entryRuleCandyBall
entryRuleCandyBall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCandyBallRule()); }
	iv_ruleCandyBall=ruleCandyBall
	{ $current=$iv_ruleCandyBall.current; }
	EOF;

// Rule CandyBall
ruleCandyBall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCandyBallAccess().getCandyBallAction_0(),
					$current);
			}
		)
		otherlv_1='CandyBall'
		{
			newLeafNode(otherlv_1, grammarAccess.getCandyBallAccess().getCandyBallKeyword_1());
		}
	)
;

// Entry rule entryRuleLollipop
entryRuleLollipop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLollipopRule()); }
	iv_ruleLollipop=ruleLollipop
	{ $current=$iv_ruleLollipop.current; }
	EOF;

// Rule Lollipop
ruleLollipop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLollipopAccess().getLollipopAction_0(),
					$current);
			}
		)
		otherlv_1='Lollipop'
		{
			newLeafNode(otherlv_1, grammarAccess.getLollipopAccess().getLollipopKeyword_1());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
