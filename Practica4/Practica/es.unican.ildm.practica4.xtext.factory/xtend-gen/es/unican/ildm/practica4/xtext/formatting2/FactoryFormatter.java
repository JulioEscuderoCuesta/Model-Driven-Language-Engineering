/**
 * generated by Xtext 2.31.0
 */
package es.unican.ildm.practica4.xtext.formatting2;

import com.google.inject.Inject;
import es.unican.ildm.practica4.xtext.services.FactoryGrammarAccess;
import factory.Component;
import factory.Connection;
import factory.ConveyorBelt;
import factory.Element;
import factory.Factory;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class FactoryFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private FactoryGrammarAccess _factoryGrammarAccess;

  protected void _format(final Factory factory, @Extension final IFormattableDocument document) {
    EList<Element> _elements = factory.getElements();
    for (final Element element : _elements) {
      document.<Element>format(element);
    }
    EList<Connection> _connections = factory.getConnections();
    for (final Connection connection : _connections) {
      document.<Connection>format(connection);
    }
  }

  protected void _format(final ConveyorBelt conveyorBelt, @Extension final IFormattableDocument document) {
    EList<Component> _components = conveyorBelt.getComponents();
    for (final Component component : _components) {
      document.<Component>format(component);
    }
  }

  public void format(final Object conveyorBelt, final IFormattableDocument document) {
    if (conveyorBelt instanceof XtextResource) {
      _format((XtextResource)conveyorBelt, document);
      return;
    } else if (conveyorBelt instanceof ConveyorBelt) {
      _format((ConveyorBelt)conveyorBelt, document);
      return;
    } else if (conveyorBelt instanceof Factory) {
      _format((Factory)conveyorBelt, document);
      return;
    } else if (conveyorBelt instanceof EObject) {
      _format((EObject)conveyorBelt, document);
      return;
    } else if (conveyorBelt == null) {
      _format((Void)null, document);
      return;
    } else if (conveyorBelt != null) {
      _format(conveyorBelt, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(conveyorBelt, document).toString());
    }
  }
}
